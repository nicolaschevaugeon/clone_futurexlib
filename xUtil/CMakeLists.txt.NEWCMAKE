cmake_minimum_required(VERSION 3.13..3.19)


project(
    eXlibris
    VERSION 1.0
    LANGUAGES CXX)

# Only do these if this is the main project, and not if it is included through add_subdirectory
if(CMAKE_PROJECT_NAME STREQUAL PROJECT_NAME)
    # Enforce C++17 as required by the compiler
    set(CMAKE_CXX_STANDARD 17)
    set(CMAKE_CXX_STANDARD_REQUIRED ON)
    set(CMAKE_CXX_EXTENSIONS OFF)
    
    # By default, we build shared libs
    set(BUILD_SHARED_LIBS "SHARED")
endif()




option(BUILD_TRELLIS                     "Build library Trellis"                    ON ) 
option(BUILD_XOCTREE                     "Build library xOctree"                    ON )


# Non standard prefix path
# Should be loaded from LocalConfig...
list(APPEND CMAKE_PREFIX_PATH "/usr/mpi/gcc/mvapich2-2.0;/usr/local/ExternalLib/gcc/include/SUPERLU;/usr/local/ExternalLib/gcc/lib64/;/usr/local/ExternalLib/gcc/mvapich2/lib64/;/usr/local/ExternalLib/gcc/mvapich2/include/mumps")
#message(FATAL_ERROR "PATH ${CMAKE_PREFIX_PATH}")
set(PARMETIS_INCLUDE_PATH     /usr/local/ExternalLib/gcc/mvapich2/include/parmetis )
set(PARMETIS_LIBRARY_PATH /usr/local/ExternalLib/gcc/mvapich2/lib64/)
#Beark, voir comment gerer autrement
#list(APPEND CMAKE_CXX_FLAGS "-pthread")
list(APPEND CMAKE_CXX_FLAGS "-pthread -fPIC")



#=======================================================================================
# development root directory (location of git sources)
#=======================================================================================
# DEVROOT is mandatory: This is the path where are all GIT repositiories. 
#                       Can be set by DEVROOT environment variable
if("$ENV{DEVROOT}" STREQUAL "")
  set(
    DEVROOT "DEVROOT/ENV/VAR/SHOULD/BE/SET/OR/REPLACE/ME" 
    CACHE INTERNAL "eXlibris root")
else()
  set(
    DEVROOT $ENV{DEVROOT}  
    CACHE INTERNAL "eXlibris root")
endif()


#
#=======================================================================================
# Force a name for ARCHOS:
# default is ${CMAKE_HOST_SYSTEM_PROCESSOR}_${CMAKE_HOST_SYSTEM_NAME}_${CMAKE_BUILD_TYPE}
# example: x86_64_linux_Debug
#=======================================================================================
#set(ARCHOS "${CMAKE_HOST_SYSTEM_PROCESSOR}_${CMAKE_HOST_SYSTEM_NAME}_${CMAKE_BUILD_TYPE}")


#set(CMAKE_BUILD_TYPE RelWithDebInfo)
set(CMAKE_BUILD_TYPE Debug)

#Set ARCHOS and use it as postfix for the current build type (/!\ only taken into account for single configuration generators)
#set(ARCHOS "Titan_${CMAKE_BUILD_TYPE}")
set(CMAKE_DEBUG_POSTFIX ${ARCHOS})

# For mult-configuration generators: do it for usual types of configuration (never tested !)
if(GENERATOR_IS_MULTI_CONFIG)
set(CMAKE_FRAMEWORK_MULTI_CONFIG_POSTFIX_DEBUG "Tsokar_Debug")
set(CMAKE_FRAMEWORK_MULTI_CONFIG_POSTFIX_RELEASE "Tsokar_Release")
set(CMAKE_FRAMEWORK_MULTI_CONFIG_POSTFIX_RELWITHDEBINFO "Tsokar_RelWithDebInfo")
set(CMAKE_FRAMEWORK_MULTI_CONFIG_POSTFIX_MINSIZEREL "Tsokar_MinSizeRel")
endif()

set(LIBRARIES_INSTALL_PATH "${DEVROOT}/lib")




# add xUtil cmake functionalities:  
list(APPEND CMAKE_MODULE_PATH 
  ${DEVROOT}/Xfiles/xUtil/cmakeUtil 
  ${CMAKE_CURRENT_SOURCE_DIR}    
  )


include(xutil_ctest_functions)  
include(xutil_install_functions)  
  
  
  
  
find_package(MPI REQUIRED)
enable_testing()

#====================================================================================
# entering Xfiles:
add_subdirectory(${DEVROOT}/Xfiles  "${CMAKE_CURRENT_BINARY_DIR}/Xfiles")
#add_subdirectory(${DEVROOT}/Xfiles/Trellis/  "${CMAKE_CURRENT_BINARY_DIR}/Xfiles/Trellis")
#
#
#====================================================================================



# entering general Xtest:
#if(BUILD_XTEST_TEST)
    add_subdirectory(${DEVROOT}/Xtest "${CMAKE_CURRENT_BINARY_DIR}/Xtest")
#endif(BUILD_XTEST_TEST)




message("__________________________________________________________________________")
