%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.92b Copyright 2002 Radical Eye Software
%%Title: tmp_fig.dvi
%%BoundingBox: 148 292 613 669
%%DocumentFonts: CMMI12 CMR12 CMR17
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E tmp_fig.dvi -o lset3d.eps
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2004.10.22:1413
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: aae443f0.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmmi10 cmmi12 cmmi5 cmmi6 cmmi7 cmmi8 cmmi9 cmmib10
%
/TeXaae443f0Encoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /Omega
/alpha /beta /gamma /delta /epsilon1 /zeta /eta /theta /iota /kappa
/lambda /mu /nu /xi /pi /rho /sigma /tau /upsilon /phi /chi /psi
/omega /epsilon /theta1 /pi1 /rho1 /sigma1 /phi1 /arrowlefttophalf
/arrowleftbothalf /arrowrighttophalf /arrowrightbothalf /arrowhookleft
/arrowhookright /triangleright /triangleleft /zerooldstyle /oneoldstyle
/twooldstyle /threeoldstyle /fouroldstyle /fiveoldstyle /sixoldstyle
/sevenoldstyle /eightoldstyle /nineoldstyle /period /comma /less /slash
/greater /star /partialdiff /A /B /C /D /E /F /G /H /I /J /K /L /M /N
/O /P /Q /R /S /T /U /V /W /X /Y /Z /flat /natural /sharp /slurbelow
/slurabove /lscript /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p
/q /r /s /t /u /v /w /x /y /z /dotlessi /dotlessj /weierstrass /vector
/tie /psi /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi
/.notdef /.notdef /Omega /alpha /beta /gamma /delta /epsilon1 /zeta /eta
/theta /iota /kappa /lambda /mu /nu /xi /pi /rho /sigma /tau /upsilon
/phi /chi /psi /tie /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: f7b6d320.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmb10 cmbx10 cmbx12 cmbx5 cmbx6 cmbx7 cmbx8 cmbx9 cmbxsl10
%     cmdunh10 cmr10 cmr12 cmr17cmr6 cmr7 cmr8 cmr9 cmsl10 cmsl12 cmsl8
%     cmsl9 cmss10cmss12 cmss17 cmss8 cmss9 cmssbx10 cmssdc10 cmssi10
%     cmssi12 cmssi17 cmssi8cmssi9 cmssq8 cmssqi8 cmvtt10
%
/TeXf7b6d320Encoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /Omega
/ff /fi /fl /ffi /ffl /dotlessi /dotlessj /grave /acute /caron /breve
/macron /ring /cedilla /germandbls /ae /oe /oslash /AE /OE /Oslash
/suppress /exclam /quotedblright /numbersign /dollar /percent /ampersand
/quoteright /parenleft /parenright /asterisk /plus /comma /hyphen
/period /slash /zero /one /two /three /four /five /six /seven /eight
/nine /colon /semicolon /exclamdown /equal /questiondown /question /at
/A /B /C /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X
/Y /Z /bracketleft /quotedblleft /bracketright /circumflex /dotaccent
/quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s /t /u
/v /w /x /y /z /endash /emdash /hungarumlaut /tilde /dieresis /suppress
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /space
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /.notdef
/.notdef /Omega /ff /fi /fl /ffi /ffl /dotlessi /dotlessj /grave /acute
/caron /breve /macron /ring /cedilla /germandbls /ae /oe /oslash /AE
/OE /Oslash /suppress /dieresis /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMR17
%!PS-AdobeFont-1.1: CMR17 1.0
%%CreationDate: 1991 Aug 20 16:38:24
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR17 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-33 -250 945 749}readonly def
/UniqueID 5000795 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F075EA0A10A15B0ED05D5039DA41B32B16E95
A3CE9725A429B35BAD796912FC328E3A28F96FCADA20A598E247755E7E7FF801
BDB00E9B9B086BDBE6EDCF841A3EAFC6F5284FED3C634085BA4EE0FC6A026E96
96D55575481B007BF93CA452EE3F71D83FAAB3D9DEDD2A8F96C5840EAE5BE5DC
9322E81DFF5E250DEB386E12A49FC9FBF9B4C25C3283F3CEA74B8278A1B09DA7
E9AE4FBAAF23EDF5A3E07D39385D521547C3AAAB8EB70549756EBA8EF445AF4A
497CA924ACCC3DD5456F8E2C7E36946A5BF14E2E959895F7C94F49137256BE46
4A238684D52792234869EAE1A6D8ADF4E138B79472D2A90A6CA99E2394CC20CD
3841733046175B20CEBE372327BF13428EED6A3E2FDF84C2DBA4B0AD584EE9DF
B51828D3B8F385846158C29C9AC3496CB9692DD10219697B2ED4D425C3957FD8
C4600D76E045C561216EF05D38177243C314877A69A1C22E3BEC611A2EE5A216
9B7C264CF6D1839DBBD78A40610F2C0D7C2FE09FFA9822FF55035AD52546970F
83EED2D30EABB1F303091EBC11A5379B12BB3F405E371519A53EA9D66174ED25
A2E55463EC71A97BE4C04B39E68112956117C8252DB6FB14AB64534B4BCD568B
246DB833982B38CDE7268BBF74B6B0C18091E1B1F87D32D66F4DD023D1F10D2A
7736A960F72AC01F733A11023832CD68FB6288A5977743F781214D8FA9C0C3F7
80001321D4397771F728FD9EE57CFE7D9192B887EC883EB1505068261DC40089
7B7D2820F06515CD74513521F6397FEAB3AD3572D9A8269430E407E357422461
1785FC2782047F4C0339D79B16862D939F3A37F78E4E2174E4FBF132539CB760
207999FF86F6A3EBE48EB0A1CA635450FDEEF79EB16D853F3BF4B7AA64AAD6FC
A3FE67F556BF1A0E5EC2AD5722C2C2B2319282FE1FA0A184DEEB60DBE4CF4783
08E5647A5F847CB027665862F21971C5BA73400657CBB26B4AA7B09B46D3B8A4
C62D960839CCB12C882159BE6D2AB47D7BF18483F044218C2FE86425A77C196B
23CB2DE00EA420716F355FB8B7A5043D44586EE0196F9D9D3CED411A1C060E26
AC9B48B6472EB3C111DB54ECD5524CC33EC28CC1C057B4719E204CC2D801CA30
CADA393010864478AEC6C0D681BDE3AD4044C7BDE915212DD9DE3F260569B471
8F33261CB014C0559DEAF632ECB5E2160F7EBA31B63B76B0EE2071308BF839C4
99C1AEC9B461BAFBB5A4B981674C4E61894D5E7C381B843E14CAA81076B083CB
E441BEEF12D44F8500DFA6B195C3DEA7A8214C15E69011FEB5B30AE29B195C7D
F88F58599317CF67DDEDEA02E25155D9CDEDDB6381DD7550444198364BC22046
DFBB4BF6AEE4F6F5CA133498F30E4B623CAB8D479C71871085BE87DC9EFCA33E
C9BEC4BFE0DC1D3255037C94EBFD6529E2D8A70BD7AC42ED442557FBF8855EAD
B81B9C48B2683BF3617A800ADF92F34E0DA54A17F51A03E09824DDC572580A13
2F0F99A79F0FFFDF7148B69B3FD1426D92DC85C7C095E06C272CC9FF0F922956
E7AA152E7277DEC0B3DEB9D0F1068A02ACB0433B3BBFA9F4CC8CED268CE8B729
25CCB577B533F6EB341251434004782B099309A3C40CE2339B54F3E3F352E7A3
C76B8FCC9734DE3310B29048A58E14EE57B96CEB867C52D724E64A626E10135E
A15CC57128263216AF29BEDC496E092E169D44AD02220CA28F6FC72DE1210B91
AD37791050B6DD3B73B70F6C9F8DFF2EF4F3713FD21657AE6347118C27964E2A
066648E3ABDBD89B306B7C0E3A3AD1B83A537C3871D38523AE8FF11EAF901180
3335A2100DF81ECB77C6229AB834DD0102E80C526DB68C501F3975E1696B9F9C
A83EA07BA7B525D2FC4374D4A4B0AABBB9B5D00FD1D94E4A9B5D9AE3A0A182E8
436613B976C974FB6A44DB4BF3417661694321B07126915D5445791704D3CE3C
1366CEE5CF4EEBE7D118550CC970E2D585CE468D1F0AFA72B8C0FA9485388B76
7764CC1CDE01D87B54FFA79B8C57012B911FC080A16AF762CE42423C07CB3E30
96F079BD0DE388349A625DE6A99DBEDB6CC4CFD72E63489CFE77A970AB5DB3F4
B081A76FB425D99E495D4DF4A10F43CE49671ACF3913E042FAEA6860C6BDAEB5
8F415796A90D9E409075D6B454C5A028181E3DDFD6CB858B53F4F00BB3392F7F
91E4652D76FF318049B4AC9FB30DC957C307DD86B386A08AB2FA1AA4F18B1BEB
956F84F3CCB9FA23926B03BFF3371C2573FA8B372C5434628A652264EE52A753
172AB53B99369D6B1859DA6CCC88F2F1C97B1FD30FF47493CBA47DAE4B906449
7D1CF54A09169BB1AE3EF43BE111D6AC7D6170A3372FEC6F2FC2B5C48DE0AFFA
2EEA700F05DFAD3341645BD0AC997867993856B7F74EF2D2BD7E4A852763BDAD
A755A5BF9FE7FA225C347AA5EBE8496984BA436C8F806DE0401640719D767D66
30B77149EBFA837F04932F47E58765A6694909FB9CF182547420092B8DFF2BA8
E087B03799FAAA5F37915A1307ABBA781B848A8396B4813D427097BB2103168F
6251AE15B589AE72733984D36CF350369AEDF25B55E90E656787E1838E290ADE
4FEBF1E57AE1ECCBBC6A8DCA61FEA04BFBBC3400D625D6C1EB987969393ACC9F
C399131C9EF3D0CF0386A2256F386F46B2B5B9A5998D4B9D226070988AB8CF3C
5B58044C538AB290ECE2618C030A52D681994A2E93A6914BAC40055D43407BA3
6F2FFE55264011BCC0911264805A2BCD108670EEF1BBEC30F252B601D3CDA779
55BE6340547B4E80274B06D157A3D89DBFBD152E1A73D1186798A09D35ACF26F
D3CD54D67C2CE670884E50E5F82A58910069079F86439FD227EC9C9B81B58C84
4E46750502E48CC5CFB027F761901032A41C921C04D45933E2E316452C79428B
51AEB3DDA2A2E724470DD165A47A6176C920610FBCCD1A78DD8A9FF7CA4DF203
5F159F3AD0920C18E00F0F0A2D00DC850AAAAAAE545D32970872571F4FECFA8E
D5E4516ADD992E7E1BB03D63E2AC7B0F0AA95EA2B7CDA7B41EC785BB5C7AC985
7BDA208DFBF1273F93B7BBD1C66758709D93E1C9B242A847FB9922B08F8011CE
5E904FCF1C950FC0AB8F210358C83F5D8BF13E59ED4F95D8EB2CC66825F52200
4F5CFD73D75711F5F8D850689015865157DE1F9BDF56164D6EE258E14E5F0880
AC382563607777CDCD3B3E1E7CCBF71A7DB5BD9BCC7CEEE36CECFAE1E132B033
4DE0F1EDC0F3C03835EF06F3D4D690EF17B6E0B76B4C393349C727300CE68E52
C9C9D6F4A65E32E9ED0285D792EE851F8BC677B9F71AC3CC772414C5625EBC2C
A75DCD83F64AE427F4507098ED391A0344ED8CDB074E87E25BBA028077AD3C00
1465D59D95E33036BA0E83302ED337C2714D57C3743626214FE8895925EA37F2
AB5E48F5852B7C6D67527B69425338D23F2E18A15F8A4D8960288B78BF9AF249
EF2A3FDE670B922AEF59505EF93191F5FAB9AEB5F85BA9725F85DC0B5B8E4166
A3C3C83BB2C4A9DE40C2813F337429D048B72CB96C3605508C750BB1E416D111
BB52DCBBB3457DDBEC210031DC779F0B29B960A9828C9B5733961A6D367326EA
065F2F104D9D8AA39F19B62B93E5ED1C82E62291B6F93B9C5B0AD1FDAF7CD424
0E77F5A99B9604C40EB8F6132826D8116B23CFA9CD4FFD1A405DF42F06DE05AA
457AF5830BFF5F2362F1FC2C933F712DD91F917537AC5915DC0C37E9C44FC796
AEA2FFE7EED26B8A457FE60C7FF715690CAC28721A9FFA3CE9D93B6FED94C3B5
2B532A76B9FD253E4E19975694121EFDDC18E5CFA7A2D6D5483BC7E3EB58FC87
291CB493D2774DE19081B8862E46D84ED3D17457ED0FF02280FC3C5B96390246
DB3C6E993C825B25E93B06E7868F128585C5A85F086374DBFF2A9016FE11F2D1
591845AC2BD907CB9D16FEC7E717C8C6B338791AD16101E7FEE5F9886C59980E
B36F5436F579C803C5C83BE17D2CDFC5FF4B10194086980106125D5560E9A5A1
D85B5A5016C61A05A93801CE145BDA4B6010D292B894BF2BB63C17BE76F11A58
84404E0EA1844888195CD840F76BE00E60445AB840832F7F8641EAC93BB4E9EB
A7DAA7452004C60F408F4271D5826790F9F2A698AF76F17EA612049F679CD984
CAD519EC1C2D20BACB48B571F6F39DF06551E4D294C01066AC510A560AFCB0A1
484CE7AC76FD6ADF6426A3B3BECEB5CD6CFCB719BFB610473D72F975C255BFE9
D603B3821CB3FB5611FB846D031F8C104991657CCD17E57CCE333691E34BA11C
239133ABF0CA2DCB7BE8FF41DBB5931D56DCFD547967FFDCBA851E6641EF71C5
8B9EA3FC790243989B7BAD12A85033005922E28E07F099DC386D19F959EE70C5
D0D2A8B4CE212ACD4E4C2B2B8C408DE8F629495C29646CAC235B6C28A9972FE0
58E693820E3C30DC8E239078601E968576D4C3FD90B883E840EF69ADF3EAE7E6
73BFDB1FF65236613F6F2303569C22852C5A6FCBD29872B26D88F7E65B74EF84
6CCE8F2BE4EA7E1269DE15673C2FCB0AF94516D7B400012F5DCA9329F4C0B202
E62D44910D4438A26A9D8F2799396096788DECF261D63E613F009CA7DA3B58B0
CB95729655AA6FFA78ABEB5F1A41BFB8A6E84B59048900FC07CD469976D8A739
58A8FB61F45931CBBB714ECCCDBA69054D1BAF3222D73B676D493614449FF435
77194EBA63C2FBFD24DD475425E70EDE35F61F4673D69A449DE07D275C6F60A6
6BCA2E0EE906BE2B420DAEEE0151BA2F46715EB99DC69984B542E5E84634137E
DCDE20F84507B45744AB4768D0F488D580D028D2D969FC9A1276902EEAAA4717
DA46F3C4F50F1299334E231F5A8295F178CFC9211CC82A14D5A9101E9D09390C
DBFC9C92B6550BB8AA0E818C4227963DC1DD818647C739FE7A9DAD4FB461864C
BE77671EC55298DFF135AB6EB6F85BFED93B05C3217410834ED29E9BC3F33594
573B2831661322636BC1B6ADEFBBB517AC2C84245C4ACCD2E2573415A59F3752
0A60565C20B94BD6C2A8CFC634B0A3861FAA0EEA16964DDFA711188E2B9784DB
082B1448C29A528B87C2FBF5B9E768CB232A9C5491E5F055FD55175AF956F5AC
E37865C84B7B088A6B34A1D46332131414DAAA4D6B0207F7AB80F5E471A3BF58
F28558C1D0AAB02635EF308F3B2C07DF9B778E6891FD640ED7B61C1155AE3708
199659F5F742BB27E7AFAC90B5261DA9192218E768F5C3E7798D3F0541E85C5C
F3DB3BCA24F36B89795A4D2830571A419AAC92984B238DB8518418F308E9DE0B
9D7519FDC3C5216B8AA5820F64DB3EC5F11446D1CC4D9666A7F547B085487BB4
D158F592652BBBD1DE84B943066C2B1B27D50B306577F850BE20B1BCC4350ED8
544C04B58FF234320A2772DCD80A95A5448A24C3EAD90D92936A848D222DCE07
8ECE39D07A918974EF106293C79BE16C049415BCAB63AAD41F6DEF12FB4DC266
952D89AF4607870815D75CDE9AD1C620A9349D88C58A790854F4DAFA5B50AC34
0C91BDBD0A0561C1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.1: CMR12 1.0
%%CreationDate: 1991 Aug 20 16:38:05
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-34 -251 988 750}readonly def
/UniqueID 5000794 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA04C77322EB2E6A79D73DC194E
59C120A2DABB9BF72E2CF256DD6EB54EECBA588101ABD933B57CE8A3A0D16B28
51D7494F73096DF53BDC66BBF896B587DF9643317D5F610CD9088F9849126F23
DDE030F7B277DD99055C8B119CAE9C99158AC4E150CDFC2C66ED92EBB4CC092A
AA078CE16247A1335AD332DAA950D20395A7384C33FF72EAA31A5B89766E635F
45C4C068AD7EE867398F0381B07CB94D29FF097D59FF9961D195A948E3D87C31
821E9295A56D21875B41988F7A16A1587050C3C71B4E4355BB37F255D6B237CE
96F25467F70FA19E0F85785FF49068949CCC79F2F8AE57D5F79BB9C5CF5EED5D
9857B9967D9B96CDCF73D5D65FF75AFABB66734018BAE264597220C89FD17379
26764A9302D078B4EB0E29178C878FD61007EEA2DDB119AE88C57ECFEF4B71E4
140A34951DDC3568A84CC92371A789021A103A1A347050FDA6ECF7903F67D213
1D0C7C474A9053866E9C88E65E6932BA87A73686EAB0019389F84D159809C498
1E7A30ED942EB211B00DBFF5BCC720F4E276C3339B31B6EABBB078430E6A09BB
377D3061A20B1EB98796B8607EECBC699445EAA866C38E02DF59F5EDD378303A
0733B90E7835C0AAF32BA04F1566D8161EA89CD4D14DDB953F8B910BFC8A7F03
5020F55EF8FC2640ADADA156F6CF8F2EB6610F7EE8874A26CBE7CD154469B9F4
ED76886B3FB679FFDEB59BB6C55AF7087BA48B75EE2FB374B19BCC421A963E15
FE05ECAAF9EECDF4B2715010A320102E6F8CCAA342FA11532671CCCC52875960
84CC1832A068F03077BAA0C4DF0B37FFCC0B7128258A011F02BF369CCF33D4EF
DAF05B66C8F1AE2ABCCC238B2F86106124AE7FE6FBB4A4D7AC77ECCE0A6E1847
970A0858643AB1A9C0D42A96B4F27AA38CF541B775444CBB4758F278182F8ABB
E1BAA72DCAB7CD6577D6703B25575EA911A0241177CB53615A57D26091285BA9
C9040E8350F68FB34954873C9E6D788E38C557D7867AC571B219674983BB4972
A5B3439AABDA062CDA099B137C40790501765C3684DE9AA4012B0DD106AC65A8
3DF17DD54A88B507F252F628C2C82725BA8FD3A6CE08CB44E06D31AD854B7A20
C89619BA72210C8879E48809DE82CA020B25ADB3419F691D0690F4BA412E3223
F4CF15AA6937562C7A12F0A09A7ECEEA8EE25E6D775F877F431753DFB2309684
C5175F0202B6E33821919F680E4C5A75C8E9034BACD04FDDD0CBA730F391C5A1
40E292BFFBAF74DB173CC048AC90C3205D3A37456CF02CBBBB3D324AFA8E74D4
CDABDAC7FD0E8D2857F63246ABE834C0D60A3EE0A36D293C89E9A9364CF8B2B5
35B7EACDD613420BBD08AE488135D07214DBAE53049769952C2158
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI12
%!PS-AdobeFont-1.1: CMMI12 1.100
%%CreationDate: 1996 Jul 27 08:57:55
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-30 -250 1026 750}readonly def
/UniqueID 5087386 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DCC57F7903449E07914FBE9E67
3C15C2153C061EB541F66C11E7EE77D5D77C0B11E1AC55101DA976CCACAB6993
EED1406FBB7FF30EAC9E90B90B2AF4EC7C273CA32F11A5C1426FF641B4A2FB2F
4E68635C93DB835737567FAF8471CBC05078DCD4E40E25A2F4E5AF46C234CF59
2A1CE8F39E1BA1B2A594355637E474167EAD4D97D51AF0A899B44387E1FD933A
323AFDA6BA740534A510B4705C0A15647AFBF3E53A82BF320DD96753639BE49C
2F79A1988863EF977B800C9DB5B42039C23EB86953713F730E03EA22FF7BB2C1
D97D33FD77B1BDCC2A60B12CF7805CFC90C5B914C0F30A673DF9587F93E47CEA
5932DD1930560C4F0D97547BCD805D6D854455B13A4D7382A22F562D7C55041F
0FD294BDAA1834820F894265A667E5C97D95FF152531EF97258F56374502865D
A1E7C0C5FB7C6FB7D3C43FEB3431095A59FBF6F61CEC6D6DEE09F4EB0FD70D77
2A8B0A4984C6120293F6B947944BE23259F6EB64303D627353163B6505FC8A60
00681F7A3968B6CBB49E0420A691258F5E7B07B417157803FCBE9B9FB1F80FD8
CA0BD2E774E4D04F1F0CB9AD88152DF9799FB90EC43955871EB7F0338141CF69
3A94F81431168EFFF7462ABF70F1AAD9909E0183601E417073F4EC7DF0180A48
73C309956ED2BC852965D7D4EF3F2A3F2A798CD61AE418D9573497D3911F5323
ED3496F6AEBE685EE322F58EA7402EF6A7B6EB9E433EB7D0F6E3C3BDAD24F983
AC4415A43C9687642E3BF1E4F4A99F03FA39177E5FFF4A9205E20954906ACE66
1BF1C9E2E43707530FF446F58B37C73CF2857A7ABB3355DC42F2E66AAA8E40FB
4F9A575B9C83CF9529A2AF30DA023468630AF059A7DC07EFF8041298B7AAEE9F
010E4C93C08FCDA085657E92D98E9B33E1A28D3DA18FCBCBC7839C0744DD5CE0
17FCC070EFE545CB2387F92A4B74262D7729B2DD458248397176142195B59718
AA5429ED39CDE4F9CD1F92837B1EDAC168765EDD6395239B7C1CC552A6EC2A8A
76E87AE3D015F874FECEF9406C030BE3732916C975F583FC660BE945F1A3EEFA
A3B4E315BC32CF5EC239A9CC1B8ACB2C09540B1A42B6D057F6EC11DC7BD2F474
72592808C08B7725B4F629671C96961BEA8F3C44C56A09C74FEE732584F36B00
27977D6B37B2827E64FF0CA96215E62E3A5C325700D9B26E3550CFE92EB1ADB8
E291B92E4BDEB32E539CD690B41B639E21B547FCF698B77B18417E600BC1C8B8
2B6C01097D32457998548EC65BF7A0A344F9EDCDECD6B5F6907657BCB470A304
2A36568F2DC6535B2BBE6757B9B29A5ED1EF6243E79654FB66C96989C887314D
AC65BD948453194CF67772E6CC2FA1F051F69281A742ADE98BB2925783BE6607
F14935BEF1C5DEC2DDFE1FBEE6678CE6BCFDDCAA202A306648A7B4E81618C52B
58B30A1538E3AC4C4E9C39DBF405A27E2EABB9D885A0907292A2F2E55D706E91
6B51B875B02A66C3609CD904B73F2489808CAE52086370D99ED263D3A2C42840
EC9D1BB22E03B87E3B01CF19066AD203B115A93122667D625A464CFDFD0BE5E2
9880A253082EDBC6062502833BB5133B46590212930D1353BBD4051B36CF278A
9E8E5E5964C52533A2FD041A4A1988D4437A2E1E3A56E1502AB8C1770B45CF3E
4C26C83FE78A7BFA2297BE6FA903B6FDEF7F6138D4C8AEB40151EBDD6EC29E90
A4DF021AA8266D9A15EE2B17D922B2A413FA387FE89071C9491968D5DEF4C13D
481AC8F722BEA9B56E03079F39762332BB9D9C963D06627FBBDD37943198D64E
68104EF1FEC2384BC09A356E9FFEEFBB492E1C9F173328928875D8CD67301F16
BE929BDA83D15FB161A69B3942A6BD8A49132D0DAAA60E4B4D32AADA68E95793
195B04D4D1B650D30D7473F9DC70E1BBE04D698430C155407596EA70660E2BE1
DAE94ED3CEC72EC4A00AE18F8FB810A5CD8C892D847D1425A4C8952EE73478BE
B3D18C7BDB6481CCCBD7BE8F02D3D8DC2C25100E4E42040C823F841B63CF9911
5A29F88CCB53593C36013F427FC23432CCD27DE5ED802FF5BC9347F42F0802F8
DAD6A9BF6115DB906B0CA7FD0DA86AA85E01C5F507A99C31BE374BD4225C39EF
2AC9C8BD0BAB5583DA309702
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099154 1000 600 600 (tmp_fig.dvi)
@start /Fa 135[83 2[88 61 62 61 2[79 88 1[43 2[43 2[47
70 88 70 1[79 13[88 12[104 8[124 2[43 9[79 28[79 6[86
12[{ TeXf7b6d320Encoding ReEncodeFont }21 172.188 /CMR17
rf /Fb 139[46 5[65 110[{ TeXf7b6d320Encoding ReEncodeFont }2
119.552 /CMR12 rf /Fc 140[79 6[50 108[{
 TeXaae443f0Encoding ReEncodeFont }2 172.188 /CMMI12
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop Black Black 639 3559 a @beginspecial
0 @llx 0 @lly 328 @urx 375 @ury 3280 @rwi @setspecial
%%BeginDocument: temp.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: lset3d.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Fri Oct 22 14:13:33 2004
%%For: moes@pc-str17.ec-nantes.fr (Nicolas MOES)
%%BoundingBox: 0 0 328 375
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 375 moveto 0 0 lineto 328 0 lineto 328 375 lineto closepath clip newpath
-115.0 487.4 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% crosshatch45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 20 20 true [ 20 0 0 -20 0 20 ]
	{<8020004050102088201104400a02800401000a02
	8011044020882040501080200040501020882011
	04400a02800401000a0280110440208820405010>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P6 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 51
% Polyline
15.000 slw
n 3450 4725 m 3600 5100 l 3975 5550 l 4500 5700 l 5100 5625 l 5475 5400 l
 5625 5175 l 5700 4800 l 5625 4575 l 5400 4425 l 5100 4275 l

 4875 4125 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 230.00 275.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
gs  clippath
4831 6846 m 4746 6931 l 4950 7135 l 4823 6923 l 5035 7050 l cp
eoclip
n 5850 7950 m
 4800 6900 l gs col0 s gr gr

% arrowhead
n 5035 7050 m 4823 6923 l 4950 7135 l  col0 s
% Polyline
gs  clippath
5610 5115 m 5610 5235 l 5898 5235 l 5658 5175 l 5898 5115 l cp
eoclip
n 6900 5175 m
 5625 5175 l gs col0 s gr gr

% arrowhead
n 5898 5115 m 5658 5175 l 5898 5235 l  col0 s
% Polyline
gs  clippath
5610 4065 m 5610 4185 l 5898 4185 l 5658 4125 l 5898 4065 l cp
eoclip
n 7350 4125 m
 5625 4125 l gs col0 s gr gr

% arrowhead
n 5898 4065 m 5658 4125 l 5898 4185 l  col0 s
% Polyline
n 3450 4350 m 3600 4725 l 3975 5175 l 4500 5325 l 5100 5250 l 5475 5025 l
 5625 4800 l 5700 4425 l 5625 4200 l 5400 4050 l 5100 3900 l

 4875 3750 l gs col0 s gr 
% Polyline
gs  clippath
4593 4599 m 4711 4580 l 4666 4295 l 4645 4542 l 4547 4314 l cp
eoclip
n 4275 2250 m
 4650 4575 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 285.00 150.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
n 4547 4314 m 4645 4542 l 4666 4295 l  col0 s
% Polyline
n 4875 3750 m
 4875 4125 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 325.00 250.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 3450 4350 m
 3450 4725 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 230.00 290.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
2 slj
n 2175 7125 m 2176 7125 l 2177 7125 l 2181 7126 l 2186 7126 l 2193 7127 l
 2203 7128 l 2215 7129 l 2231 7131 l 2250 7132 l 2272 7135 l
 2298 7137 l 2326 7140 l 2359 7143 l 2394 7146 l 2433 7150 l
 2475 7154 l 2519 7158 l 2567 7162 l 2616 7167 l 2668 7171 l
 2722 7176 l 2778 7181 l 2836 7186 l 2895 7191 l 2955 7196 l
 3016 7200 l 3079 7205 l 3143 7210 l 3208 7215 l 3274 7220 l
 3341 7224 l 3409 7229 l 3479 7233 l 3549 7237 l 3621 7241 l
 3695 7245 l 3770 7249 l 3846 7253 l 3925 7256 l 4005 7259 l
 4087 7262 l 4171 7265 l 4257 7267 l 4344 7270 l 4434 7271 l
 4524 7273 l 4616 7274 l 4708 7275 l 4800 7275 l 4903 7275 l
 5004 7274 l 5101 7272 l 5195 7271 l 5285 7268 l 5371 7266 l
 5453 7262 l 5531 7259 l 5605 7255 l 5676 7251 l 5743 7247 l
 5808 7243 l 5869 7238 l 5928 7233 l 5985 7229 l 6039 7223 l
 6091 7218 l 6142 7213 l 6190 7207 l 6237 7202 l 6282 7196 l
 6326 7191 l 6368 7185 l 6408 7180 l 6446 7174 l 6482 7169 l
 6516 7164 l 6549 7159 l 6578 7154 l 6606 7150 l 6631 7145 l
 6654 7142 l 6674 7138 l 6691 7135 l 6706 7133 l 6718 7131 l
 6728 7129 l 6736 7128 l 6742 7127 l 6746 7126 l 6748 7125 l
 6749 7125 l
 6750 7125 l gs col0 s gr 
% Polyline
n 6375 2475 m 6376 2475 l 6378 2477 l 6382 2478 l 6387 2482 l 6395 2486 l
 6405 2492 l 6418 2500 l 6432 2509 l 6448 2520 l 6466 2532 l
 6485 2547 l 6505 2563 l 6525 2580 l 6545 2600 l 6566 2622 l
 6586 2645 l 6606 2671 l 6625 2700 l 6644 2732 l 6662 2767 l
 6678 2807 l 6694 2851 l 6709 2900 l 6722 2954 l 6734 3014 l
 6743 3080 l 6750 3150 l 6753 3207 l 6755 3264 l 6755 3320 l
 6754 3373 l 6751 3423 l 6748 3469 l 6744 3510 l 6739 3547 l
 6734 3579 l 6728 3607 l 6722 3631 l 6716 3651 l 6710 3668 l
 6703 3683 l 6696 3695 l 6689 3706 l 6682 3716 l 6675 3725 l
 6668 3735 l 6660 3745 l 6653 3758 l 6645 3772 l 6638 3789 l
 6630 3810 l 6622 3835 l 6613 3865 l 6605 3900 l 6596 3941 l
 6588 3989 l 6579 4043 l 6570 4104 l 6561 4172 l 6551 4246 l
 6542 4327 l 6534 4412 l 6525 4500 l 6518 4577 l 6511 4654 l
 6505 4729 l 6499 4802 l 6494 4872 l 6489 4938 l 6484 5000 l
 6480 5058 l 6476 5111 l 6472 5159 l 6469 5204 l 6465 5245 l
 6462 5281 l 6460 5315 l 6457 5345 l 6454 5373 l 6452 5399 l
 6450 5423 l 6448 5445 l 6446 5467 l 6444 5488 l 6442 5508 l
 6440 5530 l 6438 5551 l 6437 5575 l 6435 5599 l 6434 5626 l
 6433 5654 l 6432 5686 l 6431 5720 l 6430 5758 l 6430 5799 l
 6430 5844 l 6430 5892 l 6430 5944 l 6431 5999 l 6433 6058 l
 6435 6119 l 6438 6182 l 6441 6247 l 6445 6311 l 6450 6375 l
 6458 6455 l 6467 6529 l 6476 6597 l 6487 6658 l 6498 6714 l
 6510 6764 l 6522 6808 l 6534 6848 l 6547 6883 l 6560 6915 l
 6573 6943 l 6586 6968 l 6599 6990 l 6613 7010 l 6626 7027 l
 6640 7043 l 6653 7057 l 6666 7069 l 6678 7080 l 6690 7089 l
 6701 7097 l 6711 7104 l 6720 7109 l 6728 7114 l 6735 7118 l
 6740 7120 l 6744 7122 l 6747 7124 l 6749 7124 l
 6750 7125 l gs col0 s gr 
% Polyline
n 2025 2700 m 2024 2701 l 2022 2703 l 2020 2706 l 2017 2710 l 2013 2716 l
 2008 2723 l 2003 2732 l 1996 2742 l 1990 2755 l 1983 2769 l
 1975 2785 l 1968 2802 l 1962 2822 l 1955 2843 l 1950 2867 l
 1945 2893 l 1941 2922 l 1939 2953 l 1938 2988 l 1938 3027 l
 1940 3070 l 1945 3117 l 1951 3170 l 1960 3229 l 1972 3294 l
 1986 3365 l 2004 3442 l 2025 3525 l 2042 3586 l 2060 3649 l
 2079 3710 l 2098 3770 l 2118 3827 l 2138 3881 l 2158 3932 l
 2178 3979 l 2197 4022 l 2216 4061 l 2235 4096 l 2254 4127 l
 2272 4155 l 2290 4180 l 2307 4203 l 2324 4222 l 2341 4240 l
 2358 4256 l 2374 4272 l 2390 4286 l 2406 4300 l 2422 4314 l
 2438 4329 l 2454 4345 l 2470 4363 l 2486 4382 l 2502 4404 l
 2518 4429 l 2534 4458 l 2550 4490 l 2566 4527 l 2582 4568 l
 2597 4614 l 2613 4666 l 2628 4722 l 2642 4784 l 2655 4852 l
 2668 4924 l 2679 5001 l 2688 5081 l 2695 5165 l 2700 5250 l
 2702 5332 l 2702 5413 l 2700 5493 l 2695 5571 l 2689 5647 l
 2681 5721 l 2672 5792 l 2661 5861 l 2649 5928 l 2636 5993 l
 2622 6055 l 2607 6116 l 2591 6175 l 2574 6232 l 2556 6288 l
 2538 6342 l 2519 6395 l 2500 6447 l 2480 6498 l 2460 6547 l
 2439 6595 l 2419 6642 l 2398 6688 l 2378 6732 l 2358 6774 l
 2338 6815 l 2319 6854 l 2301 6890 l 2283 6924 l 2267 6956 l
 2251 6985 l 2237 7011 l 2225 7035 l 2214 7055 l 2204 7072 l
 2196 7087 l 2190 7099 l 2185 7108 l 2181 7115 l 2178 7120 l
 2176 7123 l 2175 7124 l
 2175 7125 l gs col0 s gr 
% Polyline
n 2025 2700 m 2026 2700 l 2027 2700 l 2030 2700 l 2034 2700 l 2041 2700 l
 2049 2699 l 2060 2699 l 2074 2699 l 2090 2698 l 2109 2698 l
 2131 2697 l 2156 2697 l 2183 2696 l 2213 2695 l 2245 2694 l
 2279 2693 l 2316 2692 l 2355 2691 l 2395 2690 l 2438 2688 l
 2482 2687 l 2528 2685 l 2575 2684 l 2625 2682 l 2676 2680 l
 2730 2678 l 2785 2676 l 2843 2674 l 2903 2671 l 2967 2669 l
 3033 2666 l 3102 2663 l 3175 2660 l 3252 2657 l 3333 2653 l
 3418 2649 l 3507 2645 l 3600 2640 l 3697 2635 l 3797 2630 l
 3900 2625 l 3991 2620 l 4082 2615 l 4173 2611 l 4262 2606 l
 4350 2601 l 4436 2596 l 4520 2591 l 4602 2587 l 4683 2582 l
 4761 2578 l 4837 2573 l 4912 2569 l 4984 2564 l 5056 2560 l
 5126 2556 l 5194 2551 l 5261 2547 l 5327 2543 l 5392 2539 l
 5456 2535 l 5519 2531 l 5581 2527 l 5641 2523 l 5700 2520 l
 5758 2516 l 5814 2512 l 5868 2509 l 5921 2505 l 5971 2502 l
 6019 2499 l 6065 2496 l 6107 2493 l 6147 2490 l 6184 2488 l
 6217 2486 l 6247 2484 l 6274 2482 l 6297 2480 l 6316 2479 l
 6333 2478 l 6346 2477 l 6356 2476 l 6364 2476 l 6369 2475 l
 6372 2475 l 6374 2475 l
 6375 2475 l gs col0 s gr 
% here ends figure;
$F2psEnd
rs
end
showpage

%%EndDocument
 @endspecial 3356 1597 a Fc(l)t(s)3489 1622 y Fb(t)3587
1597 y Fa(=)48 b(0)3169 2122 y(F)-13 b(ron)l(t)50 b(de)i(\014ssure)2606
3509 y(Surface)h(ext)l(\023)-74 b(erieure)51 b(du)h(solide)1706
584 y Fc(l)t(s)1839 610 y Fb(n)1957 584 y Fa(=)c(0)j(:)70
b(Surface)53 b(de)f(la)g(\014ssure)p Black Black eop
end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
