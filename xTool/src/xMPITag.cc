/* 
    This file is a part of eXlibris C++ Library
    under the GNU Lesser General Public License.
    See the NOTICE.md & LICENSE.md files for terms 
    and conditions.
*/

#include <iostream>
#include "xMPITag.h"

namespace xtool
{

// see MPI 3.0 norm page 337 line 21  true 28
#define UB 32767

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////// xMPITag class implementation /////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// statics
std::map < MPI_Comm,int > xMPITag::tags;
// function
int xMPITag::getNewTag(const MPI_Comm & com)
{
    auto itf = tags.find(com);
    if (itf == tags.end())
    {
      tags[com] = 1;
      return 1;

    }
    else
    {
        int & t = itf->second;
        t = ( t+1 )%UB;
        return t;
    }
}
void xMPITag::resetTag(const MPI_Comm & com)
{
    auto itf = tags.find(com);
    if (itf != tags.end())
        tags.erase(itf);
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////// End xMPITag class implementation /////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



} // end of namespace
